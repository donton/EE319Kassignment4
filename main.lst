


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: put your names here
    3 00000000         ; Date Created: 1/24/2015 
    4 00000000         ; Last Modified: 1/24/2015 
    5 00000000         ; Section 1-2pm     TA: Wooseok Lee
    6 00000000         ; Lab number: 4
    7 00000000         ; Brief description of the program
    8 00000000         ;   If the switch is presses, the LED toggles at 8 Hz
    9 00000000         ; Hardware connections
   10 00000000         ;  PE0 is switch input  (1 means pressed, 0 means not pr
                       essed)
   11 00000000         ;  PE1 is LED output (1 activates external LED on protob
                       oard) 
   12 00000000         ;Overall functionality of this system is the similar to 
                       Lab 3, with four changes:
   13 00000000         ;1-  activate the PLL to run at 80 MHz (12.5ns bus cycle
                        time) 
   14 00000000         ;2-  initialize SysTick with RELOAD 0x00FFFFFF 
   15 00000000         ;3-  add a heartbeat to PF2 that toggles every time thro
                       ugh loop 
   16 00000000         ;4-  add debugging dump of input, output, and time
   17 00000000         ; Operation
   18 00000000         ; 1) Make PE1 an output and make PE0 an input. 
   19 00000000         ; 2) The system starts with the LED on (make PE1 =1). 
   20 00000000         ;   3) Wait about 62 ms
   21 00000000         ;   4) If the switch is pressed (PE0 is 1), then toggle 
                       the LED once, else turn the LED on. 
   22 00000000         ;   5) Steps 3 and 4 are repeated over and over
   23 00000000         
   24 00000000         
   25 00000000 40024004 
                       SWITCH  EQU              0x40024004  ;PE0
   26 00000000 40024008 
                       LED     EQU              0x40024008  ;PE1
   27 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   28 00000000 00000010 
                       SYSCTL_RCGC2_GPIOE
                               EQU              0x00000010  ; port E Clock Gati
                                                            ng Control
   29 00000000 00000020 
                       SYSCTL_RCGC2_GPIOF
                               EQU              0x00000020  ; port F Clock Gati
                                                            ng Control
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 40024510 
                       GPIO_PORTE_PUR_R
                               EQU              0x40024510
   34 00000000 4002451C 
                       GPIO_PORTE_DEN_R



ARM Macro Assembler    Page 2 


                               EQU              0x4002451C
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   39 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   40 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   41 00000000 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
   42 00000000 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
   43 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   44 00000000                 THUMB
   45 00000000                 AREA             DATA, ALIGN=4
   46 00000000 00000032 
                       SIZE    EQU              50
   47 00000000         ;You MUST use these two buffers and two variables
   48 00000000         ;You MUST not change their names
   49 00000000         ;These names MUST be exported
   50 00000000                 EXPORT           DataBuffer
   51 00000000                 EXPORT           TimeBuffer
   52 00000000                 EXPORT           DataPt [DATA,SIZE=4]
   53 00000000                 EXPORT           TimePt [DATA,SIZE=4]
   54 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DataBuffer
                               SPACE            SIZE*4
   55 000000C8 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    TimeBuffer
                               SPACE            SIZE*4
   56 00000190 00 00 00 
              00       DataPt  SPACE            4



ARM Macro Assembler    Page 5 


   57 00000194 00 00 00 
              00       TimePt  SPACE            4
   58 00000198         
   59 00000198         
   60 00000198                 ALIGN
   61 00000198                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   62 00000000                 THUMB
   63 00000000                 EXPORT           Start
   64 00000000                 IMPORT           TExaS_Init
   65 00000000         
   66 00000000         
   67 00000000 F7FF FFFE 
                       Start   BL               TExaS_Init  ; running at 80 MHz
                                                            , scope voltmeter o
                                                            n PD3
   68 00000004         ; initialize Port E
   69 00000004         PortE_Init
   70 00000004 495B            LDR              R1, =SYSCTL_RCGCGPIO_R ; Activa
                                                            te clock for port E
                                                            
   71 00000006 6808            LDR              R0, [R1]
   72 00000008 F040 0010       ORR              R0, #0x10   ; Set bit 4 to turn
                                                             on clock
   73 0000000C 6008            STR              R0, [R1]
   74 0000000E BF00            NOP
   75 00000010 BF00            NOP
   76 00000012 BF00            NOP
   77 00000014 BF00            NOP                          ; Let clock stabili
                                                            ze
   78 00000016 4958            LDR              R1, =GPIO_PORTE_DIR_R ; Set dir
                                                            ection register
   79 00000018 6808            LDR              R0, [R1]
   80 0000001A F040 0002       ORR              R0, #0x02   ; PE1 output
   81 0000001E 6008            STR              R0, [R1]
   82 00000020 4956            LDR              R1, =GPIO_PORTE_DEN_R ; Enable 
                                                            Port F digital port
                                                            
   83 00000022 6808            LDR              R0, [R1]
   84 00000024 F040 0003       ORR              R0, #0x03   ; 1 = digital I/O
   85 00000028 6008            STR              R0, [R1]
   86 0000002A         ; initialize Port F
   87 0000002A         PortF_Init
   88 0000002A 4952            LDR              R1, =SYSCTL_RCGCGPIO_R ; Activa
                                                            te clock for port F
                                                            
   89 0000002C 6808            LDR              R0, [R1]
   90 0000002E F040 0020       ORR              R0, #0x20   ; Set bit 5 to turn
                                                             on clock
   91 00000032 6008            STR              R0, [R1]
   92 00000034 BF00            NOP
   93 00000036 BF00            NOP
   94 00000038 BF00            NOP
   95 0000003A BF00            NOP                          ; Let clock stabili
                                                            ze
   96 0000003C 4950            LDR              R1, =GPIO_PORTF_DIR_R ; Set dir
                                                            ection register
   97 0000003E 6808            LDR              R0, [R1]
   98 00000040 F040 0004       ORR              R0, #0x04   ; PF2 output



ARM Macro Assembler    Page 6 


   99 00000044 6008            STR              R0, [R1]
  100 00000046 494F            LDR              R1, =GPIO_PORTF_DEN_R ; Enable 
                                                            Port F digital port
                                                            
  101 00000048 6808            LDR              R0, [R1]
  102 0000004A F040 0004       ORR              R0, #0x04   ; 1 = digital I/O
  103 0000004E 6008            STR              R0, [R1]
  104 00000050 494D            LDR              R1, =GPIO_PORTF_CR_R ; Enable c
                                                            ommit for Port F
  105 00000052 6808            LDR              R0, [R1]
  106 00000054 F040 0004       ORR              R0, #0x04   ; allow access to P
                                                            F2 and PF4
  107 00000058 6008            STR              R0, [R1]
  108 0000005A 494C            LDR              R1, =GPIO_PORTF_PUR_R ; Pull-up
                                                             resistors for PF2,
                                                             PF4
  109 0000005C 6808            LDR              R0, [R1]
  110 0000005E F041 0004       ORR              R0, R1, #0x04 ; enable PF4
  111 00000062 6008            STR              R0, [R1]
  112 00000064         ; initialize debugging dump, including SysTick
  113 00000064 F000 F830       BL               Debug_Init
  114 00000068 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
  115 0000006A         ;main
  116 0000006A         loop
  117 0000006A         ; delay
  118 0000006A F000 F820       BL               DELAY
  119 0000006E         ;input PE0 test output PE1
  120 0000006E         STEADY
  121 0000006E         ; not the heartbeat
  122 0000006E 4A48            LDR              R2, =GPIO_PORTE_DATA_R ; R2 has
                                                             address of Port F 
                                                            data
  123 00000070 6813            LDR              R3, [R2]    ; R3 has Port E dat
                                                            a
  124 00000072 F043 0302       ORR              R3, #0x02   ; Set PE1 output on
                                                             (Turn LED on)
  125 00000076 6013            STR              R3, [R2]    ; Store data at R2
  126 00000078         
  127 00000078         LOOP1
  128 00000078 F000 F819       BL               DELAY       ; Delay
  129 0000007C         ;dump
  130 0000007C F000 F84C       BL               Debug_Capture
  131 00000080         ;heartbeat
  132 00000080 4944            LDR              R1, =GPIO_PORTF_DATA_R
  133 00000082 6808            LDR              R0, [R1]
  134 00000084 4605            MOV              R5, R0
  135 00000086 F085 05FF       EOR              R5, #0xFF   ; NOT everything su
                                                            ch that bit 0 chang
                                                            es and everything e
                                                            lse is 1 (preserve 
                                                            data register conte
                                                            nts) 
  136 0000008A F005 0504       AND              R5, #0x04   ; AND with original
                                                             data register cont
                                                            ents, everything el
                                                            se is preserved and
                                                             bit 0 is changed



ARM Macro Assembler    Page 7 


  137 0000008E 4628            MOV              R0, R5
  138 00000090 6008            STR              R0, [R1]    ; store new data ba
                                                            ck in to PORTF_DATA
                                                            _R
  139 00000092 4A3F            LDR              R2, =GPIO_PORTE_DATA_R ; R2 has
                                                             address of Port E 
                                                            data
  140 00000094 6813            LDR              R3, [R2]    ; R3 has Port E dat
                                                            a
  141 00000096 F013 0401       ANDS             R4, R3, #0x01 ; Just see the in
                                                            put bit PE0
  142 0000009A D0E8            BEQ              STEADY      ; If PE0 is not pre
                                                            ssed, go back to st
                                                            eady flashing
  143 0000009C 461D            MOV              R5, R3
  144 0000009E F085 05FF       EOR              R5, #0xFF   ; NOT everything su
                                                            ch that bit 0 chang
                                                            es and everything e
                                                            lse is 1 (preserve 
                                                            data register conte
                                                            nts) 
  145 000000A2 F005 0502       AND              R5, #0x02   ; AND with original
                                                             data register cont
                                                            ents, everything el
                                                            se is preserved and
                                                             bit 0 is changed
  146 000000A6 462B            MOV              R3, R5
  147 000000A8 6013            STR              R3, [R2]    ; store new data ba
                                                            ck in to PORTE_DATA
                                                            _R
  148 000000AA E7E5            B                LOOP1
  149 000000AC E7DD            B                loop
  150 000000AE         ; 1 ms delay function
  151 000000AE         ; assumptions: R3 still holds unchanged Port F data, R0-
                       R1, R4-R5 are not being used for anything else
  152 000000AE         DELAY
  153 000000AE F44F 709B       MOV              R0, #310
  154 000000B2         DELAY1
  155 000000B2 F001 0100       AND              R1, #0x00
  156 000000B6 F501 617A       ADD              R1, #4000
  157 000000BA         SBT
  158 000000BA F111 31FF       ADDS             R1, #-1
  159 000000BE D5FC            BPL              SBT
  160 000000C0 F110 30FF       ADDS             R0, #-1
  161 000000C4 D5F5            BPL              DELAY1
  162 000000C6 4770            BX               LR
  163 000000C8         
  164 000000C8         
  165 000000C8         ;------------Debug_Init------------
  166 000000C8         ; Initializes the debugging instrument
  167 000000C8         ; Input: none
  168 000000C8         ; Output: none
  169 000000C8         ; Modifies: none
  170 000000C8         ; Note: push/pop an even number of registers so C compil
                       er is happy
  171 000000C8         Debug_Init
  172 000000C8         ;init data
  173 000000C8 F04F 0232       MOV              R2, #50     ; because we have 5
                                                            0 locations in the 



ARM Macro Assembler    Page 8 


                                                            array
  174 000000CC 4832            LDR              R0, =DataBuffer ; R0 holds the 
                                                            address of the data
                                                             buffer
  175 000000CE         Data_Init
  176 000000CE F04F 31FF       MOV              R1, #0xFFFFFFFF ; show that eac
                                                            h location is empty
                                                            
  177 000000D2 6001            STR              R1, [R0]
  178 000000D4 F100 0004       ADD              R0, R0, #4  ; because each elem
                                                            ent in the array is
                                                             4 bytes long
  179 000000D8 F112 32FF       ADDS             R2, #-1     ; decrement counter
                                                            
  180 000000DC D1F7            BNE              Data_Init
  181 000000DE         ;init time
  182 000000DE F04F 0232       MOV              R2, #50     ; repeat same proce
                                                            ss as above 
  183 000000E2 482E            LDR              R0, =TimeBuffer
  184 000000E4         Time_Init
  185 000000E4 F04F 31FF       MOV              R1, #0xFFFFFFFF ; show that eac
                                                            h location is empty
                                                            
  186 000000E8 6001            STR              R1, [R0]
  187 000000EA F100 0004       ADD              R0, R0, #4
  188 000000EE F112 32FF       ADDS             R2, #-1
  189 000000F2 D1F7            BNE              Time_Init
  190 000000F4         ;init pointers
  191 000000F4 4828            LDR              R0, =DataBuffer
  192 000000F6 492A            LDR              R1, =DataPt ; see below 
  193 000000F8 6008            STR              R0, [R1]
  194 000000FA 4828            LDR              R0, =TimeBuffer
  195 000000FC 4929            LDR              R1, =TimePt ; initialize pointe
                                                            r to the location o
                                                            f the first element
                                                             in the array
  196 000000FE 6008            STR              R0, [R1]
  197 00000100         ; init SysTick
  198 00000100 4929            LDR              R1, =NVIC_ST_CTRL_R
  199 00000102 F04F 0000       MOV              R0, #0      ; turn off the enab
                                                            le bit
  200 00000106 6008            STR              R0, [R1]
  201 00000108 4928            LDR              R1, =NVIC_ST_RELOAD_R
  202 0000010A 4829            LDR              R0, =0x00FFFFFF ; set the reloa
                                                            d register
  203 0000010C 6008            STR              R0, [R1]
  204 0000010E 4926            LDR              R1, =NVIC_ST_CTRL_R ; clear the
                                                             counter, write the
                                                             desired mode
  205 00000110 F04F 0005       MOV              R0, #0x05
  206 00000114 6008            STR              R0, [R1]
  207 00000116 4770            BX               LR
  208 00000118         ;------------Debug_Capture------------
  209 00000118         ; Dump Port E and time into buffers
  210 00000118         ; Input: none
  211 00000118         ; Output: none
  212 00000118         ; Modifies: none
  213 00000118         ; Note: push/pop an even number of registers so C compil
                       er is happy



ARM Macro Assembler    Page 9 


  214 00000118         Debug_Capture
  215 00000118 E92D 0FF0       PUSH             {R4-R11}
  216 0000011C 4E20            LDR              R6, =DataPt ; R6 has Data Point
                                                            er
  217 0000011E F8D6 A000       LDR              R10, [R6]
  218 00000122 4F20            LDR              R7, =TimePt ; R7 has Time Point
                                                            er
  219 00000124 F8DF 9070       LDR              R9, =DataBuffer
  220 00000128 F109 09C8       ADD              R9, #200    ; Check to see if a
                                                            t end of array
  221 0000012C 45CA            CMP              R10, R9
  222 0000012E D01E            BEQ              CapDone
  223 00000130 4817            LDR              R0, =GPIO_PORTE_DATA_R
  224 00000132 4B20            LDR              R3, =NVIC_ST_CURRENT_R
  225 00000134 F8D6 9000       LDR              R9, [R6]    ; R9 has Data Point
                                                            er address
  226 00000138 F8D7 A000       LDR              R10, [R7]   ; R10 has Time Poin
                                                            ter address
  227 0000013C 681C            LDR              R4, [R3]    ; R4 has NVIC_ST_CU
                                                            RRENT_R 
  228 0000013E 6802            LDR              R2, [R0]    ; R2 has PE data
  229 00000140 F002 0202       AND              R2, #0x02   ; R2 only has PE1
  230 00000144 EA4F 0252       LSR              R2, #1      ; Shift to 0 bit po
                                                            sition
  231 00000148 6801            LDR              R1, [R0]    ; R1 has PE data
  232 0000014A F001 0101       AND              R1, #0x01   ; R1 only has PE0
  233 0000014E EA4F 1101       LSL              R1, #4      ; Shift to 4 bit po
                                                            sition
  234 00000152 EA41 0102       ORR              R1, R2      ; R1 has PE data in
                                                             correct position
  235 00000156 F8C9 1000       STR              R1, [R9]    ; Save PE data to a
                                                            rray
  236 0000015A F8CA 4000       STR              R4, [R10]   ; Save NVIC_ST_CURR
                                                            ENT_R to array
  237 0000015E F109 0904       ADD              R9, #4      ; Increment Pointer
                                                            s
  238 00000162 F10A 0A04       ADD              R10, #4
  239 00000166 F8C6 9000       STR              R9, [R6]    ; update pointers
  240 0000016A F8C7 A000       STR              R10, [R7]
  241 0000016E         CapDone
  242 0000016E E8BD 0FF0       POP              {R4-R11}
  243 00000172 4770            BX               LR
  244 00000174         
  245 00000174                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  246 00000174                 END                          ; end of file
              400FE608 
              40024400 
              4002451C 
              40025400 
              4002551C 
              40025524 
              40025510 
              400243FC 
              400253FC 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 10 


              00000000 
              E000E010 
              E000E014 
              00FFFFFF 
              E000E018 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000000

Symbol: DataBuffer
   Definitions
      At line 54 in file main.s
   Uses
      At line 50 in file main.s
      At line 174 in file main.s
      At line 191 in file main.s
      At line 219 in file main.s

DataPt 00000190

Symbol: DataPt
   Definitions
      At line 56 in file main.s
   Uses
      At line 52 in file main.s
      At line 192 in file main.s
      At line 216 in file main.s

TimeBuffer 000000C8

Symbol: TimeBuffer
   Definitions
      At line 55 in file main.s
   Uses
      At line 51 in file main.s
      At line 183 in file main.s
      At line 194 in file main.s

TimePt 00000194

Symbol: TimePt
   Definitions
      At line 57 in file main.s
   Uses
      At line 53 in file main.s
      At line 195 in file main.s
      At line 218 in file main.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 61 in file main.s
   Uses
      None
Comment: .text unused
CapDone 0000016E

Symbol: CapDone
   Definitions
      At line 241 in file main.s
   Uses
      At line 222 in file main.s
Comment: CapDone used once
DELAY 000000AE

Symbol: DELAY
   Definitions
      At line 152 in file main.s
   Uses
      At line 118 in file main.s
      At line 128 in file main.s

DELAY1 000000B2

Symbol: DELAY1
   Definitions
      At line 154 in file main.s
   Uses
      At line 161 in file main.s
Comment: DELAY1 used once
Data_Init 000000CE

Symbol: Data_Init
   Definitions
      At line 175 in file main.s
   Uses
      At line 180 in file main.s
Comment: Data_Init used once
Debug_Capture 00000118

Symbol: Debug_Capture
   Definitions
      At line 214 in file main.s
   Uses
      At line 130 in file main.s
Comment: Debug_Capture used once
Debug_Init 000000C8

Symbol: Debug_Init
   Definitions
      At line 171 in file main.s
   Uses
      At line 113 in file main.s
Comment: Debug_Init used once
LOOP1 00000078




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: LOOP1
   Definitions
      At line 127 in file main.s
   Uses
      At line 148 in file main.s
Comment: LOOP1 used once
PortE_Init 00000004

Symbol: PortE_Init
   Definitions
      At line 69 in file main.s
   Uses
      None
Comment: PortE_Init unused
PortF_Init 0000002A

Symbol: PortF_Init
   Definitions
      At line 87 in file main.s
   Uses
      None
Comment: PortF_Init unused
SBT 000000BA

Symbol: SBT
   Definitions
      At line 157 in file main.s
   Uses
      At line 159 in file main.s
Comment: SBT used once
STEADY 0000006E

Symbol: STEADY
   Definitions
      At line 120 in file main.s
   Uses
      At line 142 in file main.s
Comment: STEADY used once
Start 00000000

Symbol: Start
   Definitions
      At line 67 in file main.s
   Uses
      At line 63 in file main.s
Comment: Start used once
Time_Init 000000E4

Symbol: Time_Init
   Definitions
      At line 184 in file main.s
   Uses
      At line 189 in file main.s
Comment: Time_Init used once
loop 0000006A

Symbol: loop
   Definitions
      At line 116 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 149 in file main.s
Comment: loop used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 122 in file main.s
      At line 139 in file main.s
      At line 223 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 82 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 78 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTE_PUR_R 40024510

Symbol: GPIO_PORTE_PUR_R
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: GPIO_PORTE_PUR_R unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 104 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 132 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 100 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 96 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 108 in file main.s
Comment: GPIO_PORTF_PUR_R used once
LED 40024008

Symbol: LED
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: LED unused
NVIC_ST_CTRL_R E000E010

Symbol: NVIC_ST_CTRL_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 198 in file main.s
      At line 204 in file main.s

NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 43 in file main.s
   Uses
      At line 224 in file main.s
Comment: NVIC_ST_CURRENT_R used once
NVIC_ST_RELOAD_R E000E014

Symbol: NVIC_ST_RELOAD_R



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 42 in file main.s
   Uses
      At line 201 in file main.s
Comment: NVIC_ST_RELOAD_R used once
SIZE 00000032

Symbol: SIZE
   Definitions
      At line 46 in file main.s
   Uses
      At line 54 in file main.s
      At line 55 in file main.s

SWITCH 40024004

Symbol: SWITCH
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: SWITCH unused
SYSCTL_RCGC2_GPIOE 00000010

Symbol: SYSCTL_RCGC2_GPIOE
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOE unused
SYSCTL_RCGC2_GPIOF 00000020

Symbol: SYSCTL_RCGC2_GPIOF
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOF unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 27 in file main.s
   Uses
      At line 70 in file main.s
      At line 88 in file main.s

20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 64 in file main.s
   Uses
      At line 67 in file main.s
Comment: TExaS_Init used once
1 symbol
374 symbols in table
